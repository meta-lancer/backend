name: Build with Gradle
run-name: Go Go
on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: metaovis-service
  AWS_CODE_DEPLOY_APPLICATION: Backend-CICD
  AWS_CODE_DEPLOY_GROUP: Backend-CICD-Group

jobs:
  build-with-gradle:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Where is here
        run: pwd

      - name: Executable Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --stacktrace
        env:
          SPRING_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          SPRING_REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SPRING_SECURITY_OAUTH2_CLIENT_TARGETURL: ${{ secrets.OAUTH_CLIENT_TARGET_URL }}
          SPRING_LOGINPAGE: ${{ secrets.OAUTH_LOGIN_PAGE }}
          SPRING_SUCCESSURL: ${{ secrets.OAUTH_SUCCESS_URL }}
          SPRING_FAILURL: ${{ secrets.OAUTH_FAIL_URL }}
          SPRING_SECURITY_REMEMBERME_KEY: ${{ secrets.REMEMBERME_KEY }}
          EXCHANGE_API_KEY: ${{ secrets.EXCHANGE_API_KEY }}
          CLOUD_AWS_CREDENTIALS_ACCESSKEY: ${{ secrets.AWS_ACCESS_KEY }}
          CLOUD_AWS_CREDENTIALS_SECRETKEY: ${{ secrets.AWS_SECRET_KEY }}
          CLOUD_AWS_S3_ASSETBUCKET: ${{ secrets.ASSET_BUCKET }}
          CLOUD_AWS_REGION_STATIC: ${{ secrets.REGION_STATIC }}
          CLOUD_AWS_S3_CLOUDFRONT_ASSET: ${{ secrets.CLOUDFRONT_ASSET }}
          CLOUD_AWS_S3_CLOUDFRONT_USER: ${{ secrets.CLOUDFRONT_USER }}
          CLOUD_AWS_S3_CLOUDFRONT_SERVICE: ${{ secrets.CLOUDFRONT_SERVICE }}
          SLACK_PRIVATE_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL_ERROR: ${{ secrets.SLACK_ERROR_CHANNEL }}
          SLACK_CHANNEL_INFO: ${{ secrets.SLACK_INFO_CHANNEL }}
          IAMPORT_API_KEY: ${{ secrets.IMP_KEY }}
          IAMPORT_API_SECRET: ${{ secrets.IMP_SECRET }}
          IAMPORT_IMPUID: ${{ secrets.IMP_UID }}
          SPRING_DATASOURCE_DRIVERCLASSNAME: ${{ secrets.RDS_DRIVER }}
          SPRING_DATASOURCE_URL: ${{ secrets.RDS_HOST }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.RDS_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.RDS_PASSWORD }}

      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

      - name: S3에 업로드
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip